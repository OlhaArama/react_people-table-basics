{"version":3,"sources":["pages/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PersonDetails.tsx","components/PeopleTable.tsx","pages/PeoplePage.tsx","pages/NotFoundPage.tsx","components/PageNavLink.tsx","components/Navbar.tsx","App.tsx","index.tsx"],"names":["HomePage","className","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","to","slug","classNames","sex","name","PersonDetails","personMother","personFather","isSelected","born","died","motherName","fatherName","PeopleTable","people","selectedPerson","personParent","personParentName","find","map","PeoplePage","useState","setPeople","isLoading","setIsLoading","isError","setIsError","useParams","useEffect","catch","finally","length","NotFoundPage","PageNavLink","text","isActive","Navbar","role","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.c07ab821.chunk.js","sourcesContent":["import React from 'react';\n\nexport const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => (\n  <Link\n    to={`../${person.slug}`}\n    className={\n      classNames(\n        {\n          'has-text-danger': person.sex === 'f',\n        },\n      )\n    }\n  >\n    {person.name}\n  </Link>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  person: Person;\n  personMother: Person | undefined;\n  personFather: Person | undefined;\n  isSelected: (person: Person) => boolean,\n};\n\nexport const PersonDetails: React.FC<Props> = ({\n  person,\n  personMother,\n  personFather,\n  isSelected,\n}) => (\n  <tr\n    data-cy=\"person\"\n    key={person.name}\n    className={classNames(\n      {\n        'has-background-warning': isSelected(person),\n      },\n    )}\n  >\n    <td>\n      <PersonLink\n        person={person}\n      />\n    </td>\n\n    <td>{person.sex}</td>\n    <td>{person.born}</td>\n    <td>{person.died}</td>\n    <td>\n\n      {\n        personMother\n          ? (\n            <PersonLink person={personMother} />\n          ) : (\n            person.motherName || '-'\n          )\n      }\n    </td>\n    <td>\n      {\n        personFather\n          ? (\n            <PersonLink person={personFather} />\n          ) : (\n            person.fatherName || '-'\n          )\n      }\n    </td>\n  </tr>\n);\n","import React from 'react';\nimport { Person } from '../types';\nimport { PersonDetails } from './PersonDetails';\n\ntype Props = {\n  people: Person[];\n  selectedPerson: string;\n};\n\nexport const PeopleTable: React.FC<Props> = ({\n  people,\n  selectedPerson,\n}) => {\n  const isSelected = (person: Person) => person.slug === selectedPerson;\n\n  const personParent = (personParentName: string | null) => {\n    return people.find(person => person.name === personParentName);\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonDetails\n            key={person.name}\n            person={person}\n            personMother={personParent(person.motherName)}\n            personFather={personParent(person.fatherName)}\n            isSelected={isSelected}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../api';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { Person } from '../types';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const { slug = '' } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    setIsError(false);\n\n    getPeople()\n      .then(setPeople)\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!isError && !isLoading && !people.length && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {!isLoading && people.length > 0 && (\n            <PeopleTable\n              people={people}\n              selectedPerson={slug}\n            />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string;\n  text: string;\n};\n\nexport const PageNavLink: React.FC<Props> = ({ to, text }) => (\n  <NavLink\n    className={\n      ({ isActive }) => classNames(\n        'navbar-item',\n        {\n          'has-background-grey-lighter': isActive,\n        },\n      )\n    }\n    to={to}\n  >\n    {text}\n  </NavLink>\n);\n","import React from 'react';\nimport { PageNavLink } from './PageNavLink';\n\nexport const Navbar: React.FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home\" />\n        <PageNavLink to=\"people\" text=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","import './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { Navbar } from './components/Navbar';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"*\" element={<NotFoundPage />} />\n\n            <Route path=\"people\">\n              <Route index element={<PeoplePage />} />\n              <Route path=\":slug\" element={<PeoplePage />} />\n            </Route>\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}